{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No Ethereum browser detected! You should check out MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rewardData, rwd, rwdBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                // Load Tether Contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                window.alert(\"Error! Tether contract not deployed - Network Undetected\");\n\n              case 20:\n                // Load RWD Contract\n                rewardData = RWD.networks[networkId];\n\n                if (!rewardData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rewardData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 26;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  balance: rwdBalance\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"Error! Reward Token contract not deployed - Network Undetected\");\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } // Our React Code\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          color: 'green',\n          fontSize: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // HTML - The markup language for writing basic text and websites\n// CSS - Styles the website (colors, fonts, sizes)\n// Javascript - Allows the websites to be dynamic","map":{"version":3,"sources":["C:/Users/ar274/Desktop/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","console","log","balance","rewardData","rwd","rwdBalance","props","decentralBank","stakingBalance","loading","color","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './App.css'\r\nimport Navbar from './Navbar.js'\r\nimport Web3 from 'web3'\r\nimport Tether from '../truffle_abis/Tether.json'\r\nimport RWD from '../truffle_abis/RWD.json'\r\n\r\nclass App extends Component {\r\n    async UNSAFE_componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n    }\r\n    \r\n    async loadWeb3() {\r\n        if(window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        }\r\n        else if(window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('No Ethereum browser detected! You should check out MetaMask!')\r\n        }\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const account = await web3.eth.getAccounts()\r\n        this.setState({account: account[0]})\r\n        const networkId = await web3.eth.net.getId()\r\n        \r\n        // Load Tether Contract\r\n        const tetherData = Tether.networks[networkId]\r\n        if(tetherData) {\r\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\r\n            this.setState({tether})\r\n\r\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n            this.setState({tetherBalance: tetherBalance.toString()})\r\n            console.log({balance: tetherBalance})\r\n        }\r\n        else {\r\n            window.alert(\"Error! Tether contract not deployed - Network Undetected\")\r\n        }\r\n\r\n        // Load RWD Contract\r\n        const rewardData = RWD.networks[networkId]\r\n        if(rewardData) {\r\n            const rwd = new web3.eth.Contract(RWD.abi, rewardData.address)\r\n            this.setState({rwd})\r\n\r\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\r\n            this.setState({rwdBalance: rwdBalance.toString()})\r\n            console.log({balance: rwdBalance})\r\n        }\r\n        else {\r\n            window.alert(\"Error! Reward Token contract not deployed - Network Undetected\")\r\n        }\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            tether: {},\r\n            rwd: {},\r\n            decentralBank: {},\r\n            tetherBalance: '0',\r\n            rwdBalance: '0',\r\n            stakingBalance: '0',\r\n            loading: true \r\n        }\r\n    }\r\n\r\n    // Our React Code\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar account={this.state.account}/>\r\n                <div className='text-center' style={{color:'green', fontSize:'30px'}}>\r\n                    <h1></h1>\r\n                </div>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n// HTML - The markup language for writing basic text and websites\r\n// CSS - Styles the website (colors, fonts, sizes)\r\n// Javascript - Allows the websites to be dynamic "]},"metadata":{},"sourceType":"module"}