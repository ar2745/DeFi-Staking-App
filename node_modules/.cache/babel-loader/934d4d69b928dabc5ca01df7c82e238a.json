{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ar274\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from 'react';\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  // Airdrop to have a timer that counts down\n  // Initialize the countdown after our clients have staked a certain amount\n  // Timer functionality, countdown, startTimer, state - for time to work   \n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"countDown\",\n    value: function countDown() {\n      // countdown one second at a time\n      // stop counting when hit zero\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      seconds = Math.ceil(divisor_for_seconds / 60);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s, this.startTimer);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Users/ar274/Desktop/defi-staking-app-starter/defi-staking-app-starter/src/components/Airdrop.js"],"names":["React","Component","Airdrop","state","time","seconds","timer","startTimer","bind","countDown","setState","secondsToTime","clearInterval","setInterval","secs","hours","minutes","Math","floor","divisor_for_minutes","divisor_for_seconds","ceil","obj","timeLeftVar","color","m","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,O;;;AACF;AACA;AACA;AACA,qBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AACA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AALU;AAMb;;;;gCAEW;AACR;AACA;AAEA,UAAIH,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAoB,CAAlC;AACA,WAAKK,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE,KAAKO,aAAL,CAAmBN,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAKA,UAAGA,OAAO,IAAI,CAAd,EAAiB;AACbO,QAAAA,aAAa,CAAC,KAAKN,KAAN,CAAb;AACH;AACJ;;;iCAEY;AACT,UAAG,KAAKA,KAAL,IAAc,CAAjB,EAAoB;AAChB,aAAKA,KAAL,GAAaO,WAAW,CAAC,KAAKJ,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ;;;kCAEaK,I,EAAM;AAChB,UAAIC,KAAJ,EAAWC,OAAX,EAAoBX,OAApB;AACAU,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAV;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACAd,MAAAA,OAAO,GAAGY,IAAI,CAACI,IAAL,CAAUD,mBAAmB,GAAG,EAAhC,CAAV;AAEA,UAAIE,GAAG,GAAG;AACN,aAAKP,KADC;AAEN,aAAKC,OAFC;AAGN,aAAKX;AAHC,OAAV;AAKA,aAAOiB,GAAP;AACH;;;wCAEmB;AAChB,UAAIC,WAAW,GAAG,KAAKZ,aAAL,CAAmB,KAAKR,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKK,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEmB;AAAP,OAAd;AACH;;;6BAEQ;AACL,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,CAA9C,OAAkD,KAAKtB,KAAL,CAAWC,IAAX,CAAgBsB,CAAlE,EACK,KAAKnB,UADV,CADJ;AAKH;;;;EA9DiBN,S;;AAiEtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Airdrop extends Component {\r\n    // Airdrop to have a timer that counts down\r\n    // Initialize the countdown after our clients have staked a certain amount\r\n    // Timer functionality, countdown, startTimer, state - for time to work   \r\n    constructor() {\r\n        super()\r\n        this.state = {time: {}, seconds: 20 };\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    countDown() {\r\n        // countdown one second at a time\r\n        // stop counting when hit zero\r\n\r\n        let seconds = this.state.seconds -1\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        })\r\n\r\n        if(seconds == 0) {\r\n            clearInterval(this.timer)\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        if(this.timer == 0) {\r\n            this.timer = setInterval(this.countDown, 1000)\r\n        }\r\n    }\r\n\r\n    secondsToTime(secs) {\r\n        let hours, minutes, seconds\r\n        hours = Math.floor(secs / (60 * 60))\r\n\r\n        let divisor_for_minutes = secs % (60 * 60)\r\n        minutes = Math.floor(divisor_for_minutes / 60)\r\n\r\n        let divisor_for_seconds = divisor_for_minutes % 60\r\n        seconds = Math.ceil(divisor_for_seconds / 60)\r\n\r\n        let obj = {\r\n            'h': hours,\r\n            'm': minutes,\r\n            's': seconds\r\n        }\r\n        return obj\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n        this.setState({time: timeLeftVar})\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div style={{color:'black'}}>{this.state.time.m}:{this.state.time.s}\r\n                {this.startTimer}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Airdrop;"]},"metadata":{},"sourceType":"module"}